name: Chocolatine Workflow

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

env:
  MIRROR_URL: git@github.com:EpitechPGEPromo2029/B-DOP-200-BAR-2-1-chocolatine-khushan-hitesh.kanakrai.git

jobs:
  check-conditions:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check if branch should be ignored
        id: check
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/ga-ignore-* ]]; then
            echo "Branch is ignored. Skipping workflow."
            echo "should_run=false" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REPOSITORY}" == "${{ secrets.MIRROR_REPO }}" ]]; then
            echo "This is the mirror repository. Skipping workflow."
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "Workflow will proceed."
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  mirror-repo:
    runs-on: ubuntu-latest
    needs: check-conditions
    if: needs.check-conditions.outputs.should_run == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with: 
          target_repo_url: git@github.com:EpitechPGEPromo2029/B-DOP-200-BAR-2-1-chocolatine-khushan-hitesh.kanakrai.git
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}

  check-executables:
    runs-on: ubuntu-latest
    needs: mirror-repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref : ${{ github.ref }}
  
      - name: Verify Executables
        run: |
          IFS=',' read -ra EXE_LIST <<< "${{ env.EXECUTABLE }}"
          for exe in "${EXE_LIST[@]}"; do
            if [[ ! -x "$exe" ]]; then
              echo "Error: Expected executable '$exe' not found or not executable."
              exit 1
            fi
          done
          echo "All expected executables are present."

  check_coding_style:
    runs-on: ubuntu-latest
    needs: check-executables
    container:
      image: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run coding style checker
        run: check.sh $(pwd) $(pwd)

      - name: Annotate coding style errors
        if: always() # Run even if the previous step failed
        run: |
          if [ -f coding-style-reports.log ]; then
            while IFS= read -r line; do
              file=$(echo "$line" | cut -d':' -f1)
              line_num=$(echo "$line" | cut -d':' -f2)
              error_type=$(echo "$line" | cut -d':' -f3)
              message=$(echo "$line" | cut -d':' -f4-)

              # Output GitHub annotation format
              echo "::error file=$file,line=$line_num,title=Coding Style Error::$error_type: $message"
            done < coding-style-reports.log
          fi

      - name: Fail on coding style errors
        if: always()
        run: |
          if [ -s coding-style-reports.log ]; then
            echo "Coding style errors detected."
            exit 1
          fi

